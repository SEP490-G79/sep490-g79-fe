import React, { useContext, useEffect, useState } from "react";
import type { Blog } from "@/types/Blog";
import { Breadcrumb, BreadcrumbItem, BreadcrumbLink, BreadcrumbList, BreadcrumbSeparator } from "@/components/ui/breadcrumb";
import AppContext from "@/context/AppContext";
import { useParams } from "react-router-dom";
import axios from "axios";
import { Avatar, AvatarImage } from "@/components/ui/avatar";
import { getTimeAgo } from "@/utils/dateUtils";
import BlogRecommendation from "./BlogRecommendation";


const mockBlog: Blog = {
  _id: "64fadb28cfae1a4a2e9381ab",
  shelter: "64fa1de7f7d12345a9b1cde9", // ID c·ªßa tr·∫°m c·ª©u h·ªô
  thumbnail_url: "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQIkP9sI_AuNBKBiH1YRqd7EpTyqpMxtNhw7g&s",
  title: "C√°ch chƒÉm s√≥c ch√≥ con m√πa h√®",
  description:
    "T√¨m hi·ªÉu c√°ch chƒÉm s√≥c ch√≥ con trong nh·ªØng th√°ng h√® oi b·ª©c ƒë·ªÉ ƒë·∫£m b·∫£o s·ª©c kh·ªèe v√† s·ª± ph√°t tri·ªÉn to√†n di·ªán.",
  content: `
    <h2>1. Gi·ªØ cho ch√≥ lu√¥n m√°t m·∫ª</h2>
    <p>Trong nh·ªØng ng√†y n·∫Øng n√≥ng, h√£y ƒë·∫£m b·∫£o ch√≥ con lu√¥n c√≥ n∆∞·ªõc s·∫°ch v√† ch·ªó m√°t ƒë·ªÉ ngh·ªâ ng∆°i. Tr√°nh d·∫´n ch√≥ ƒëi d·∫°o v√†o gi·ªØa tr∆∞a.</p>
    <h2>2. Ch·∫ø ƒë·ªô ƒÉn ph√π h·ª£p</h2>
    <p>Ch·ªçn th·ª©c ƒÉn d·ªÖ ti√™u h√≥a, tr√°nh c√°c lo·∫°i th·ª±c ph·∫©m qu√° nhi·ªÅu ƒë·∫°m ho·∫∑c d·∫ßu m·ª°. Cung c·∫•p th√™m rau c·ªß t∆∞∆°i ƒë·ªÉ b·ªï sung vitamin.</p>
    <h2>3. V·ªá sinh th∆∞·ªùng xuy√™n</h2>
    <p>T·∫Øm r·ª≠a ƒë·ªãnh k·ª≥ ƒë·ªÉ lo·∫°i b·ªè b·ª•i b·∫©n v√† k√Ω sinh tr√πng. N√™n s·ª≠ d·ª•ng s·ªØa t·∫Øm chuy√™n d·ª•ng cho ch√≥ con.</p>
    <h2>4. D·∫•u hi·ªáu c·∫£nh b√°o s·ªëc nhi·ªát</h2>
    <p>N·∫øu ch√≥ c√≥ d·∫•u hi·ªáu th·ªü g·∫•p, ch·∫£y n∆∞·ªõc d√£i nhi·ªÅu, n·∫±m li b√¨ ‚Äì h√£y ƒë∆∞a ƒë·∫øn b√°c sƒ© th√∫ y ngay l·∫≠p t·ª©c.</p>
    <p>üëâ H√£y lu√¥n ƒë·ªÉ √Ω v√† chƒÉm s√≥c ng∆∞·ªùi b·∫°n nh·ªè n√†y nh∆∞ m·ªôt th√†nh vi√™n trong gia ƒë√¨nh!</p>
  `,
  status: "published",
  createdAt: "2025-07-01T10:00:00Z",
  updatedAt: "2025-07-09T12:30:00Z",
};

const BlogDetail = () => {
    const [blog, setBlog] = useState<Blog>();
    const {blogAPI} = useContext(AppContext);
    const {blogId} = useParams();
    useEffect(() => {
        // axios.get(`${blogAPI}/get-by-id/${blogId}`)
        // .then(result => setBlog(result.data))
        // .catch(error => console.log(error?.response.data.message))

        setBlog(mockBlog);
    }, [])



  if (!blog) return <div className="text-center text-gray-500">Kh√¥ng t√¨m th·∫•y b√†i vi·∫øt.</div>;

  return (
    <div className="px-20 py-10 grid grid-cols-12">
    <Breadcrumb className="container mb-3 py-1 px-2 col-span-12">
        <BreadcrumbList>
          <BreadcrumbItem>
            <BreadcrumbLink href="#">Trang ch·ªß</BreadcrumbLink>
          </BreadcrumbItem>
          <BreadcrumbSeparator />
          <BreadcrumbItem>
            <BreadcrumbLink href={`/shelters`} >
              Trung t√¢m c·ª©u h·ªô
            </BreadcrumbLink>
          </BreadcrumbItem>
          <BreadcrumbSeparator />
          <BreadcrumbItem>
            <BreadcrumbLink href={`/shelters/${blog.shelter}`}>
              {blog.shelter}
            </BreadcrumbLink>
          </BreadcrumbItem>
                  <BreadcrumbSeparator />
          <BreadcrumbItem>
            <BreadcrumbLink href={`/shelters/${blog.shelter}`}>
              Blog
            </BreadcrumbLink>
          </BreadcrumbItem>
        <BreadcrumbSeparator />
          <BreadcrumbItem>
            <BreadcrumbLink href={`/shelters/${blog.shelter}/blog/${blog._id}`}>
              {blog._id}
            </BreadcrumbLink>
          </BreadcrumbItem>
        </BreadcrumbList>
      </Breadcrumb>
      <div className="col-span-2 mx-auto py-8 flex flex-col gap-2">
        <h4 className="font-semibold">Nh·ªØng b√†i vi·∫øt c√πng tr·∫°m</h4>
        <BlogRecommendation blog={mockBlog}/>
        <BlogRecommendation blog={mockBlog}/>
        <BlogRecommendation blog={mockBlog}/>
      </div>
        <div className="max-w-5xl mx-auto py-8 col-span-10">
          <h1 className="text-3xl md:text-4xl font-bold leading-tight mb-4">
            {blog.title}
          </h1>
          <div className="flex gap-2 mb-2">
            <Avatar className="h-12 w-12"><AvatarImage src={blog.thumbnail_url} alt="shelter avatar" /></Avatar>
            <div>
              {blog.shelter?.name || "Tr·∫°m A"} 
              <p className="flex">
                {getTimeAgo(new Date(blog.createdAt))}
              </p>
            </div>
          </div>
          {blog.thumbnail_url && (
            <img
              src={blog.thumbnail_url}
              alt="Blog Thumbnail"
              className="w-full h-auto max-h-[500px] object-cover rounded-md mb-6"
            />
          )}
          {blog.description && (
            <p className="italic text-lg mb-6">{blog.description}</p>
          )}
          <div
            className="prose prose-lg max-w-none text-justify [&>*]:mb-4"
            dangerouslySetInnerHTML={{ __html: blog.content }}
          />
          <div className="mt-10 text-sm text-right text-gray-500 italic">
            C·∫≠p nh·∫≠t l·∫ßn cu·ªëi: {getTimeAgo(new Date(blog.updatedAt))}
          </div>
        </div>
    </div>
  );
};

export default BlogDetail;
